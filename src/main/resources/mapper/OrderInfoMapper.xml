<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.codeman.seckill.dao.OrderInfoMapper" >
  <resultMap id="BaseResultMap" type="com.codeman.seckill.entity.OrderInfo" >
    <id column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
    <result column="ship_id" property="shipId" jdbcType="BIGINT" />
    <result column="receive_id" property="receiveId" jdbcType="BIGINT" />
    <result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
    <result column="order_quantity" property="orderQuantity" jdbcType="INTEGER" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    order_id, user_id, goods_id, ship_id, receive_id, unit_price, order_quantity, order_status, 
    pay_time, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from order_info
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from order_info
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.codeman.seckill.entity.OrderInfo" >
    insert into order_info (order_id, user_id, goods_id, 
      ship_id, receive_id, unit_price, 
      order_quantity, order_status, pay_time, 
      create_time, update_time)
    values (#{orderId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{goodsId,jdbcType=BIGINT}, 
      #{shipId,jdbcType=BIGINT}, #{receiveId,jdbcType=BIGINT}, #{unitPrice,jdbcType=DECIMAL}, 
      #{orderQuantity,jdbcType=INTEGER}, #{orderStatus,jdbcType=INTEGER}, #{payTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.codeman.seckill.entity.OrderInfo" >
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="shipId != null" >
        ship_id,
      </if>
      <if test="receiveId != null" >
        receive_id,
      </if>
      <if test="unitPrice != null" >
        unit_price,
      </if>
      <if test="orderQuantity != null" >
        order_quantity,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="shipId != null" >
        #{shipId,jdbcType=BIGINT},
      </if>
      <if test="receiveId != null" >
        #{receiveId,jdbcType=BIGINT},
      </if>
      <if test="unitPrice != null" >
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="orderQuantity != null" >
        #{orderQuantity,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.codeman.seckill.entity.OrderInfo" >
    update order_info
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="shipId != null" >
        ship_id = #{shipId,jdbcType=BIGINT},
      </if>
      <if test="receiveId != null" >
        receive_id = #{receiveId,jdbcType=BIGINT},
      </if>
      <if test="unitPrice != null" >
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="orderQuantity != null" >
        order_quantity = #{orderQuantity,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.codeman.seckill.entity.OrderInfo" >
    update order_info
    set user_id = #{userId,jdbcType=BIGINT},
      goods_id = #{goodsId,jdbcType=BIGINT},
      ship_id = #{shipId,jdbcType=BIGINT},
      receive_id = #{receiveId,jdbcType=BIGINT},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      order_quantity = #{orderQuantity,jdbcType=INTEGER},
      order_status = #{orderStatus,jdbcType=INTEGER},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
</mapper>